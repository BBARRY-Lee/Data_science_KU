a <- c(1, 2, 3)
library(ggplot)
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
midwest_raw <- as.data.frame(ggplot2::midwest)
View(midwest_raw)
# 1. ggplot2 의 midwest 데이터를 데이터 프레임 형태로 불러와서 데이터의 특성을 파악
head(midwest_raw)
tail(midwest_raw)
view(midwest_raw)
View(midwest_raw)
dim(midwest_raw)
str(midwest_raw)
summary(midwest_raw)
# 2. poptotal(전체 인구)을 total 로, popasian(아시아 인구)을 asian 으로 변수명을 수정
midwest_new <- midwest_raw
# 2. poptotal(전체 인구)을 total 로, popasian(아시아 인구)을 asian 으로 변수명을 수정
install.packages("dplyr")
library(dplyr)
midwest_new <- rename(midwest_new, total = poptotal)
midwest_new <- rename(midwest_new, asian = popasian)
midwest_new
midwest_new$percentage <- midwest_new%total / midwest_nwe%asian
midwest_new$percentage <- midwest_new%total / midwest_new%asian
midwest_new$percentage <- midwest_new$total/ midwest_new$asian
midwest_new$percentage <- midwest_new$total/ midwest_new$asian
midwest_new
midwest_new$percentage <- midwest_new$asian / midwest_new$total
midwest_new
midwest_new$percentage <- (midwest_new$asian / midwest_new$total) * 100
midwest_new
midwest_new$percentage <- (midwest_new$asian / midwest_new$total) * 100
midwest_new
midwest_new$percentage <- prop.table(table(midwest_new$asian / midwest_new$total)) * 100
midwest_new
prop.table(table(midwest_new$percentage))*100 <- (midwest_new$asian / midwest_new$total)
midwest_new$percentage <- (midwest_new$asian / midwest_new$total)
prop.table(table(midwest_new$percentage))*100
midwest_new$percentage <- (midwest_new$asian / midwest_new$total)
prop.table(table(midwest_new$percentage))*100
prop.table(table(midwest_new$percentage))*100
midwest_new
midwest_new$percentage <- (midwest_new$asian / midwest_new$total)*100
midwest_new
midwest_new$percentage <- (midwest_new$asian / midwest_new$total)*100
midwest_new
midwest_new$asian_percentage <- (midwest_new$asian / midwest_new$total)*100
midwest_new
midwest_new$asian-percentage <- (midwest_new$asian / midwest_new$total)*100
midwest_new$asian_percentage <- (midwest_new$asian / midwest_new$total)*100
midwest_new
midwest_new$asian_percentage <- (midwest_new$asian / midwest_new$total)*100
midwest_new
midwest_new$asian_pct <- (midwest_new$asian / midwest_new$total)*100
midwest_new
midwest_new$asianpct <- (midwest_new$asian / midwest_new$total)*100
midwest_new
dim(midwest_raw) # row, col 출력
midwest_new[c(25:28)]
midwest_new
dim(midwest_new) # row, col 출력
midwest_new <- midwest_raw
midwest_new <- rename(midwest_new, total = poptotal)
midwest_new <- rename(midwest_new, asian = popasian)
midwest_new
dim(midwest_new)
dim(midwest_raw) # row, col 출력
midwest_new$asian_percentage <- (midwest_new$asian / midwest_new$total)*100
midwest_new
dim(midwest_new)
qplot(midwest_new$county)
qplot(midwest_new$county)
# 4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는"small"을 부여하는파생변수를 생성
asian_pct_mean <- mean(midwest_new$asian_percentage)
asian_pct_mean
midwest_new$asian_percentage_mean <- ifelse(midwest_new$asian_percentag > asian_pct_mean, "large", "small")
midwest_new
# 5. "large"와 "small"에 해당하는 지역이 얼마나 되는지, 빈도표와 빈도 막대 그래프를 만들어 확인
qplot(midwest_new$asian_percentage_mean)
# 5. "large"와 "small"에 해당하는 지역이 얼마나 되는지, 빈도표와 빈도 막대 그래프를 만들어 확인
table(midwest_new$asian_percentage_mean)
hist(midwest_new$county)
hist(midwest_new$county)
hist(x=midwest_new$county)
hist(x=midwest_new$county, main = "country", xlab="country", ylab = "d")
hist(x=midwest_new$aria, main = "country", xlab="country", ylab = "d")
hist(x=midwest_new$area, main = "country", xlab="country", ylab = "d")
hist(x=midwest_new$area, main = "country", xlab="country", ylab = "frequency")
hist(x=midwest_new$PID, main = "country", xlab="country", ylab = "frequency")
hist(x=midwest_new$state, main = "country", xlab="country", ylab = "frequency")
midwest_new$state
set(midwest_new$state)
# 5. "large"와 "small"에 해당하는 지역이 얼마나 되는지, 빈도표와 빈도 막대 그래프를 만들어 확인
table(midwest_new$asian_percentage_mean) #빈도표
table(midwest_new$state)
table(midwest_new$county)
table(midwest_new$PID)
table(midwest_new$county)
table(midwest_new$category)
# 도시.. county는 너무 많고, state가 맞다고 생각합니다.
hist(x=midwest_new$state, main = "country", xlab="country", ylab = "frequency")
str(midwest_raw) # 속성 확인
summary(midwest_raw) # 요약통계량
table(midwest_new$state)
table(midwest_new$county)
table(midwest_new$county)
hist(x=midwest_new$county, main = "country", xlab="country", ylab = "frequency")
qplot(midwest_new$asian_percentage_mean) # 빈도 막대 그래프
table(midwest_new$area)
hist(x=midwest_new$area, main = "country", xlab="country", ylab = "frequency")
hist(x=midwest_new$area, main = "Country distribution", xlab="country", ylab = "frequency")
hist(x=midwest_new$area, main = "Country distribution", xlab="Country", ylab = "frequency")
hist(x=midwest_new$county, main = "Country distribution", xlab="Country", ylab = "frequency")
plot(x=midwest_new$county, main = "Country distribution", xlab="Country", ylab = "frequency")
qplot(x=midwest_new$county, main = "Country distribution", xlab="Country", ylab = "frequency")
sum(midwest_new$area)
table(midwest_new$county)
table(midwest_new$county)
sum(midwest_new$area)
sum(midwest_new$area)
table(midwest_new$state)
table(midwest_new$county)
table(midwest_new$area)
str(midwest_raw) # 속성 확인
hist(x=midwest_new$county, main = "Country distribution", xlab="Country", ylab = "frequency")
qplot(midwest_new$asian_percentage_mean) # 빈도 막대 그래프
install.packages("ggplot2")
library(ggplot2)
midwest_raw <- as.data.frame(ggplot2::midwest)
# 2. poptotal(전체 인구)을 total 로, popasian(아시아 인구)을 asian 으로 변수명을 수정
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
midwest_new <- midwest_raw
midwest_new <- rename(midwest_new, total = poptotal)
midwest_new <- rename(midwest_new, asian = popasian)
midwest_new
# 파생변수 생성
midwest_new$asian_pct <- (midwest_new$asian / midwest_new$total) * 100
midwest_new
# 아시아 인구 백분율 전체 평균
asian_pct_mean <- mean(midwest_new$asian_pct)
# 조건문 파생변수 생성
midwest_new$asian_percentage_mean <- ifelse(midwest_new$asian_pct > asian_pct_mean, "large", "small")
midwest_new
# 5. "large"와 "small"에 해당하는 지역이 얼마나 되는지, 빈도표와 빈도 막대 그래프를 만들어 확인
table(midwest_new$asian_percentage_mean) #빈도표
qplot(midwest_new$asian_percentage_mean) # 빈도 막대 그래프
midwest_new
midwest_new
install.packages("ggplot2")
library(ggplot2)
midwdst_raw <- as.data.frame(ggplot2::midwest)
midwest_raw <- as.data.frame(ggplot2::midwest)
View(midwdst_raw)
View(midwdst_raw)
View(midwdst_raw)
rm(list=ls(midwdst_raw))
midwest_new <- midwdst_raw
View(midwdst_raw)
View(midwdst_raw)
midwest_raw <- as.data.frame(ggplot2::midwest)
midwest_new <- midwdst_raw
midwest_new <- midwest_raw
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
midwest_new$adults_pct <- (midwest_new$popadults / midwest_new$poptotal) * 100
midwest_new$adults_pct
midwest_new
midwest_new$minors_pct <- ((midwest_new$poptotal-midwest_new$popadults) / midwest_new$poptotal) * 100
midwest_new
# 문제 2. 미성년 인구 백분율이 가장 높은 상위 5 개 county(지역)의 미성년 인구 백분율을 출력
midwest_new %>% filter(manufacturer == 'country') %>%
arrange(desc(minors_pct)) %>% head(5)
# 문제 2. 미성년 인구 백분율이 가장 높은 상위 5 개 county(지역)의 미성년 인구 백분율을 출력
midwest_new %>% filter(country) %>%
arrange(desc(minors_pct)) %>% head(5)
View(midwest_raw)
# 문제 2. 미성년 인구 백분율이 가장 높은 상위 5 개 county(지역)의 미성년 인구 백분율을 출력
midwest_new %>% filter('country') %>%
arrange(desc(minors_pct)) %>% head(5)
# 문제 2. 미성년 인구 백분율이 가장 높은 상위 5 개 county(지역)의 미성년 인구 백분율을 출력
midwest_new %>% select(country) %>%
arrange(desc(minors_pct)) %>% head(5)
# 문제 2. 미성년 인구 백분율이 가장 높은 상위 5 개 county(지역)의 미성년 인구 백분율을 출력
midwest_new %>% select(county) %>%
arrange(desc(minors_pct)) %>% head(5)
# 문제 2. 미성년 인구 백분율이 가장 높은 상위 5 개 county(지역)의 미성년 인구 백분율을 출력
midwest_new %>% select(minors_pct, county) %>%
arrange(desc(minors_pct)) %>% head(5)
# 문제 2. 미성년 인구 백분율이 가장 높은 상위 5 개 county(지역)의 미성년 인구 백분율을 출력
midwest_new %>% select(county, minors_pct) %>%
arrange(desc(minors_pct)) %>% head(5)
midwest_new %>% (grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle",
ifelse(minors_pct < 30, "small")))) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle",
ifelse(minors_pct < 30, "small")))) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>% head(10)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>% head(20)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>% head(50)
View(midwest_new)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
arrange((minors_pct)) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
arrange(desc(minors_pct)) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(count = n()) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade, county) %>% summarise(count = n()) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade, county) %>% summarise(count = n()) %>% head(10)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(count = n(county)) %>% head(10)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(county, count = n()) %>% head(10)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(count = n(), county) %>% head(10)
group_by(grade) %>% select(county, minors_pct) %>% (summarise(count = n()) %>% head(10)
group_by(grade) %>% select(county, minors_pct, grade) %>% (summarise(count = n()) %>% head(10)
group_by(grade) %>% select(county) %>% (summarise(count = n()) %>% head(10)
group_by(grade)  %>% (summarise(count = n()) %>% head(10)
group_by(grade) %>% (summarise(count = n()) %>% head(10)
group_by(grade) %>% (summarise(count = n()) %>% head(10)
group_by(grade) %>% (summarise(count = n()) %>% head(10)
group_by(grade) %>% (summarise(count = n()) %>% head(10)
group_by(grade) %>% (summarise(count = n()) %>% head(10)
10
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% head(10)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% head(10)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>% group_by(grade) %>% head(10)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small")))%>% group_by(grade) %>% head(10)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade, county) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(n=n()) head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(n=n()) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(, county) %>% summarise(n=n()) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade, county) %>% summarise(n=n()) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(county=n()) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(county=county()) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(county=n()) %>% head(5)
# 문제4. popasian은 해당 지역의 아시아인 인구를 나타냅니다. '전체 인구 대비 아시아인 인구 백분율'
#        변수를 추가하고, 하위 10개 지역의 state(주), county(지역명), 아시아인 인구 백분율을 출력
midwest_new$asian_pct <- (midwest_new$popasian / midwest_new$poptotal) * 100
midwest_new
midwest_new %>% select(state, county, asian_pct) %>% arrange(asian_pct) %>% head(10)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(county=n(), count_unique = n_distinct(county)) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(county=n(), n_distinct_maker = n_distinct(county)
) %>% head(5)
midwest_new %>% mutate(grade = ifelse(minors_pct >= 40, "large",
ifelse(minors_pct >= 30, "middle", "small"))) %>%
group_by(grade) %>% summarise(county=n())
setwd("~/KU/데이터사이언스의 이해")
library(ggplot2)
library(dplyr)
setwd("~/KU/데이터사이언스의 이해/10주차")
Advertising
Advertising <- read.csv("Advertising.csv")
("apt_data.csv")
Credit <- read.csv("Credit.csv")
examscore <- read.csv("examscore.csv")
apt_data <- read.csv("apt_data.csv")
apt_data <- read.csv("apt_data.csv", fileEncoding = "euc-kr")
table(apt_data)
table(Advertising)
lm.fit <- lm(sales ~ tv, data = Advertising)
lm.fit
summary(lm.fit)
lm.fit <- lm(sales ~ tv + radio + newspater, data = Advertising)
lm.fit <- lm(sales ~ tv + radio + newpater, data = Advertising)
lm.fit <- lm(sales ~ tv + radio + newspaper, data = Advertising)
summary(lm.fit)
mpg <-  mpg
lm(formula = cty ~ year, data = mpg)
summary(lm.mpg)
lm.mpg <- lm(formula = cty ~ year, data = mpg)
summary(lm.mpg)
lm.mpg <- lm(formula = cty ~ year+displ, data = mpg)
summary(lm.mpg)
### 부동산 값 회귀분석 ---------------------
lm.apt <- lm(price = size +age, data = apt_data)
summary(lm.apt_data)
summary(lm.apt)
view(apt_data)
View(apt_data)
### 부동산 값 회귀분석 ---------------------
# 왜 오래될수록 부동산값이 비싸게 나올까?
# 오래된 아파트일수록, 단지수가 많기 때문
# 최신 아파트일수록, 단지규모가 작음
lm.apt <- lm(price = size ~age, data = apt_data)
### 부동산 값 회귀분석 ---------------------
# 왜 오래될수록 부동산값이 비싸게 나올까?
# 오래된 아파트일수록, 단지수가 많기 때문
# 최신 아파트일수록, 단지규모가 작음
lm.apt <- lm(price ~ size + age, data = apt_data)
summary(lm.apt)
lm.apt <- lm(price ~ size + age +complex size, data = apt_data)
lm.apt <- lm(price ~ size + age + complex_size, data = apt_data)
summary(lm.apt)
# 역세권 + 브랜드명
lm.apt <- lm(price ~ size + age + complex_size + subway + brand, data = apt_data)
summary(lm.apt)
View(Credit)
View(Credit)
lm.credit <- lm(balance ~ gender, data = credit)
lm.credit <- lm(balance ~ gender, data = Credit)
summart(lm.credit)
summary(lm.credit)
lm.credit <- lm(balance ~ ethnicity, data = Credit)
summary(lm.credit)
lm.adv <-  lm(sales ~ tv * radio, data = Advertising)
summary(lm.adv)
lm.crd <- lm(formula = balance ~ income + student + income:student, data = Credit)
summary(lm.crd)
